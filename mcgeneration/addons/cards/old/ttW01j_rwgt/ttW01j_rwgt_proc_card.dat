#************************************************************
#*                     MadGraph5_aMC@NLO                    *
#*                                                          *
#*                *                       *                 *
#*                  *        * *        *                   *
#*                    * * * * 5 * * * *                     *
#*                  *        * *        *                   *
#*                *                       *                 *
#*                                                          *
#*                                                          *
#*         VERSION 2.6.0                 2017-08-16         *
#*                                                          *
#*    The MadGraph5_aMC@NLO Development Team - Find us at   *
#*    https://server06.fynu.ucl.ac.be/projects/madgraph     *
#*                                                          *
#************************************************************
#*                                                          *
#*               Command File for MadGraph5_aMC@NLO         *
#*                                                          *
#*     run as ./bin/mg5_aMC  filename                       *
#*                                                          *
#************************************************************
set group_subprocesses Auto
set ignore_six_quark_processes False
set loop_optimized_output True
#set low_mem_multicore_nlo_generation False
set loop_color_flows False
set gauge unitary
set complex_mass_scheme False
set max_npoint_for_channel 0
import model dim6top_LO_UFO

define p = g u c d s b u~ c~ d~ s~ b~
define j = g u c d s b u~ c~ d~ s~ b~
define l+ = e+ mu+ ta+
define l- = e- mu- ta-
define vl = ve vm vt
define vl~ = ve~ vm~ vt~
define w = w+ w-

generate p p > t t~ w DIM6=1 QED=4 FCNC=0
add process p p > t t~ w j DIM6=1 QED=4 FCNC=0

output ttW01j_rwgt 
# central card
#define p = g u c d s u~ c~ d~ s~
#define j = g u c d s u~ c~ d~ s~
#define l+ = e+ mu+
#define l- = e- mu-
#define vl = ve vm vt
#define vl~ = ve~ vm~ vt~
#define p = p b b~
#define j = j b b~
#define ell+ = e+ mu+ ta+
#define ell- = e- mu- ta-
#generate p p > t t~ ell+ vl @0
#add process p p > t t~ ell- vl~ @1
#add process p p > t t~ ell+ vl j @2
#add process p p > t t~ ell- vl~ j @3

